"use strict";(self.webpackChunkdesarrollo_web=self.webpackChunkdesarrollo_web||[]).push([[6032],{3905:(e,a,l)=>{l.d(a,{Zo:()=>u,kt:()=>b});var n=l(7294);function r(e,a,l){return a in e?Object.defineProperty(e,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[a]=l,e}function o(e,a){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),l.push.apply(l,n)}return l}function t(e){for(var a=1;a<arguments.length;a++){var l=null!=arguments[a]?arguments[a]:{};a%2?o(Object(l),!0).forEach((function(a){r(e,a,l[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):o(Object(l)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(l,a))}))}return e}function i(e,a){if(null==e)return{};var l,n,r=function(e,a){if(null==e)return{};var l,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)l=o[n],a.indexOf(l)>=0||(r[l]=e[l]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)l=o[n],a.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var c=n.createContext({}),s=function(e){var a=n.useContext(c),l=a;return e&&(l="function"==typeof e?e(a):t(t({},a),e)),l},u=function(e){var a=s(e.components);return n.createElement(c.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var l=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(l),p=r,b=d["".concat(c,".").concat(p)]||d[p]||m[p]||o;return l?n.createElement(b,t(t({ref:a},u),{},{components:l})):n.createElement(b,t({ref:a},u))}));function b(e,a){var l=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=l.length,t=new Array(o);t[0]=p;var i={};for(var c in a)hasOwnProperty.call(a,c)&&(i[c]=a[c]);i.originalType=e,i[d]="string"==typeof e?e:r,t[1]=i;for(var s=2;s<o;s++)t[s]=l[s];return n.createElement.apply(null,t)}return n.createElement.apply(null,l)}p.displayName="MDXCreateElement"},633:(e,a,l)=>{l.r(a),l.d(a,{assets:()=>c,contentTitle:()=>t,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=l(7462),r=(l(7294),l(3905));const o={},t="\xc1mbito de una variable en JavaScript",i={unversionedId:"MODULO 4/Ambito de una variable",id:"MODULO 4/Ambito de una variable",title:"\xc1mbito de una variable en JavaScript",description:"El \xe1mbito de una variable en JavaScript se refiere a la parte del programa en la que dicha variable es accesible. La comprensi\xf3n del \xe1mbito es fundamental para entender c\xf3mo funcionan las variables en JavaScript y c\xf3mo se manejan los valores almacenados en ellas.",source:"@site/docs/MODULO 4/02-Ambito de una variable.md",sourceDirName:"MODULO 4",slug:"/MODULO 4/Ambito de una variable",permalink:"/docs/MODULO 4/Ambito de una variable",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/MODULO 4/02-Ambito de una variable.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Funciones en JavaScript",permalink:"/docs/MODULO 4/Funciones"},next:{title:"Hoisting en JavaScript",permalink:"/docs/MODULO 4/Hoisting"}},c={},s=[{value:"Tipos de \xe1mbito",id:"tipos-de-\xe1mbito",level:2},{value:"\xc1mbito global",id:"\xe1mbito-global",level:3},{value:"\xc1mbito local",id:"\xe1mbito-local",level:3},{value:"El problema de la declaraci\xf3n de variables sin la palabra clave &quot;var&quot;, &quot;let&quot; o &quot;const&quot;",id:"el-problema-de-la-declaraci\xf3n-de-variables-sin-la-palabra-clave-var-let-o-const",level:2},{value:"Conclusiones",id:"conclusiones",level:2},{value:"Ejercicio: Calculadora",id:"ejercicio-calculadora",level:2}],u={toc:s};function d(e){let{components:a,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,l,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\xe1mbito-de-una-variable-en-javascript"},"\xc1mbito de una variable en JavaScript"),(0,r.kt)("p",null,"El \xe1mbito de una variable en JavaScript se refiere a la parte del programa en la que dicha variable es accesible. La comprensi\xf3n del \xe1mbito es fundamental para entender c\xf3mo funcionan las variables en JavaScript y c\xf3mo se manejan los valores almacenados en ellas."),(0,r.kt)("h2",{id:"tipos-de-\xe1mbito"},"Tipos de \xe1mbito"),(0,r.kt)("p",null,"En JavaScript, existen dos tipos de \xe1mbito: el \xe1mbito global y el \xe1mbito local."),(0,r.kt)("h3",{id:"\xe1mbito-global"},"\xc1mbito global"),(0,r.kt)("p",null,"El \xe1mbito global se refiere al espacio en el que una variable est\xe1 disponible en todo el programa. Cuando declaras una variable fuera de cualquier funci\xf3n o bloque de c\xf3digo, se convierte en una variable global y se puede acceder a ella desde cualquier parte del programa."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'// Variable global\nvar nombre = "Juan";\n\nfunction saludar() {\n  console.log("Hola, " + nombre);\n}\n\nsaludar(); // Salida: "Hola, Juan"\n')),(0,r.kt)("h3",{id:"\xe1mbito-local"},"\xc1mbito local"),(0,r.kt)("p",null,"El \xe1mbito local se refiere al espacio en el que una variable solo es accesible dentro de una funci\xf3n o bloque de c\xf3digo espec\xedfico. Cuando declaras una variable dentro de una funci\xf3n, se convierte en una variable local y solo se puede acceder a ella dentro de esa funci\xf3n."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'function saludar() {\n  // Variable local\n  var mensaje = "Hola, bienvenido";\n\n  console.log(mensaje);\n}\n\nsaludar(); // Salida: "Hola, bienvenido"\n\nconsole.log(mensaje); // Error: mensaje is not defined\n')),(0,r.kt)("h2",{id:"el-problema-de-la-declaraci\xf3n-de-variables-sin-la-palabra-clave-var-let-o-const"},'El problema de la declaraci\xf3n de variables sin la palabra clave "var", "let" o "const"'),(0,r.kt)("p",null,'Es importante tener en cuenta que si declaras una variable sin utilizar la palabra clave "var", "let" o "const" dentro de una funci\xf3n, esa variable se convertir\xe1 autom\xe1ticamente en una variable global.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"function calcular() {\n  resultado = 10 * 5; // Variable global (sin la palabra clave var, let o const)\n  console.log(resultado);\n}\n\ncalcular(); // Salida: 50\n\nconsole.log(resultado); // Salida: 50 (la variable es global)\n")),(0,r.kt)("h2",{id:"conclusiones"},"Conclusiones"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"El \xe1mbito de una variable en JavaScript define su alcance y determina d\xf3nde se puede acceder a ella."),(0,r.kt)("li",{parentName:"ul"},"Las variables globales est\xe1n disponibles en todo el programa."),(0,r.kt)("li",{parentName:"ul"},"Las variables locales solo est\xe1n disponibles dentro de la funci\xf3n o bloque de c\xf3digo en el que se declaran."),(0,r.kt)("li",{parentName:"ul"},'Es importante utilizar las palabras clave "var", "let" o "const" al declarar variables para evitar problemas de \xe1mbito y garantizar un c\xf3digo m\xe1s limpio y mantenible.')),(0,r.kt)("h2",{id:"ejercicio-calculadora"},"Ejercicio: Calculadora"),(0,r.kt)("p",null,"Crea una calculadora sencilla utilizando funciones en JavaScript. La calculadora debe ser capaz de realizar operaciones b\xe1sicas como suma, resta, multiplicaci\xf3n y divisi\xf3n."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Define una funci\xf3n llamada ",(0,r.kt)("inlineCode",{parentName:"li"},"sumar")," que tome dos n\xfameros como par\xe1metros y devuelva la suma de los mismos."),(0,r.kt)("li",{parentName:"ol"},"Define una funci\xf3n llamada ",(0,r.kt)("inlineCode",{parentName:"li"},"restar")," que tome dos n\xfameros como par\xe1metros y devuelva la resta del segundo n\xfamero al primero."),(0,r.kt)("li",{parentName:"ol"},"Define una funci\xf3n llamada ",(0,r.kt)("inlineCode",{parentName:"li"},"multiplicar")," que tome dos n\xfameros como par\xe1metros y devuelva el producto de los mismos."),(0,r.kt)("li",{parentName:"ol"},"Define una funci\xf3n llamada ",(0,r.kt)("inlineCode",{parentName:"li"},"dividir")," que tome dos n\xfameros como par\xe1metros y devuelva el cociente de la divisi\xf3n del primero por el segundo.")))}d.isMDXComponent=!0}}]);